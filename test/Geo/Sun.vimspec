Describe Geo.Sun
  Before all
    let SUN = vital#vital#new().import('Geo.Sun')
    let DateTime = vital#vital#new().import('DateTime')
  End

  Describe .new()
    It object creation check.
      let obj = SUN.new()
      Assert NotEquals(obj, v:null, 'create object')
      Assert Equals(type(obj), type({}), 'create object type')
    End
  End

  Context Sun object
    Describe .resolve()
      It object resolve work fine check.
        let obj = SUN.new()
        call obj.resolve(140 ,35)
        Assert NotEquals(obj.status, v:null, 'object result status')
      End
      It object resolve work typical data check.
        let obj = SUN.new()
        call obj.resolve(140 ,35, DateTime.from_unix_time(1564617600))
        Assert NotEquals(obj.status, v:null, 'object result status')

        let sunrise = '2019-07-31T19:49:20+00:00'
        let sunset  = '2019-08-01T09:43:22+00:00'
        let sunriseobj = DateTime.from_format(sunrise, '%FT%T%z')
        let sunsetobj  = DateTime.from_format(sunset, '%FT%T%z')
        Assert Equals(obj.result.sunrise.compare(sunriseobj), 0, "sunrise diff")
        Assert Equals(obj.result.sunset.compare(sunsetobj)  , 0, "sunset diff" )
      End
    End
  End
End
